<!DOCTYPE html>
<html lang='en'>
<head>
	<title></title>
 	<meta charset="utf-8">
  	<meta name="viewport" content="width=device-width, initial-scale=1">
	<link rel="stylesheet" href="/javascripts/bootstrap.min.css">
	<link rel="stylesheet" href="/javascripts/animate.css">
	<script src="/javascripts/jquery.min.js"></script>
	<script src="/javascripts/flot/jquery.flot.js"></script>
	<script src="/javascripts/flot/jquery.flot.labels.js"></script>
	<script src="/javascripts/bootstrap.min.js"></script>
<style>

	.myCSSClass
    {
        font-size: 20px;
        color: green;
        padding: 2px;
        opacity: 0.80;
		margin-top:15px;
    }

	#placeholder:after {
		content: 'Latitude';
		position: absolute;
		top: 50%;
		left: -50px;
		font-weight: 600;
		/* Safari */
		-webkit-transform: rotate(-90deg);
		/* Firefox */
		-moz-transform: rotate(-90deg);
		/* IE */
		-ms-transform: rotate(-90deg);
		/* Opera */
		-o-transform: rotate(-90deg);
		/* Internet Explorer */
		filter: progid:DXImageTransform.Microsoft.BasicImage(rotation=3);
	}


	#placeholder:before {
		content: 'Longitude';
		position: absolute;
		bottom: -30px;
		left: 50%;
		font-weight: 600;
	}

</style>

</head>
<body>

	<nav class='navbar navbar-default' style='margin-bottom: 0px;border-radius: 0;;'>
		<div class="container-fluid">
			<div class='navbar-header'>
				<a href='#' class='navbar-brand active' style='font-size:32px'>CracksOnTracks</a>
				<button type='button' class='navbar-toggle' data-toggle='collapse' data-target='#navbar'>
					<span class='icon-bar'></span>
					<span class='icon-bar'></span>
					<span class='icon-bar'></span>
				</button>
			</div>
			<div class='collapse navbar-collapse' id='navbar'>
				<ul class='nav navbar-nav navbar-right'>
					<li style='font-size:32px' class='wow jello'><a href="/">Go Back</a></li>
				</ul>
			</div>
		</div>
	</nav>

	<center>
	<div id="placeholder" style="width:1700px;height:920px"></div>
	</center>

    <div class='jumbotron' style='margin-top:60px;background-color:#dc143c;color:white;font-size:36px;'>
        <center>
        If maintained, then enter label below...
        </center>
    </div>

    <div class='container' style='margin-top:60px'>
        <div class='cols-sm-3'></div>
        <div class='cols-sm-6'>
            <div class='form-group' style='margin-top:30px'>
            <center>
                <label for='val' />
                <input name='val' id='val' class='form-control'/>
                <br>
                
                <button id='presss' class='btn btn-danger btn-default'>Submit</button>
            </center>
            </div>
        </div>
        <div class='cols-sm-3'></div>
    </div>


    

<script src='/javascripts/wow.js'></script>
<script type='text/javascript'>
new WOW().init();
</script>
<script>
	var arr1 = [];
    var arr2= [];
    var arr3 = [];

	  var i   = setInterval(function(){
		  var xhttp = new XMLHttpRequest();
		  xhttp.onreadystatechange = function(){
			  if(this.readyState==4 && this.status==200){
                  arr1=[];
                  arr2=[];
                  arr3=[];
				  response  = JSON.parse(this.response);

                var data = [];
                var i=0;
                var j=0;
                var k=0;

                response.data.forEach(function(crack){
                    var obj = new Object;
                    if(crack.status==1){
                        
                        obj['label']="Maintained Cracks";
                        obj['color']="green",
                        obj['points']={"show":true};
                        obj['data']=[
                            [crack.clat,crack.clong]
                        ];
                        obj["points"]={radius:15,show: true };
                        obj['showLabels']=true;
                        obj["labels"]=["A"+i.toString()];
                        obj['labelPlacement']='below';
                        obj['canvasRender']=true;
                        obj['cColor']='green';
                        obj['cFont']="15px, san-serif";
                        data.push(obj);
                        arr1.push(crack);
                        i++;
                    }
                    else if(crack.flag==1){
                        obj['label']="Avoidable Cracks";
                        obj['color']="yellow",
                        obj['points']={"show":true};
                        obj['data']=[
                            [crack.clat,crack.clong]
                        ];
                        obj["points"]={radius:15,show: true };
                        obj['showLabels']=true;
                        obj["labels"]=["B"+j.toString()];
                        obj['labelPlacement']='below';
                        obj['canvasRender']=true;
                        obj['cColor']='yellow';
                        obj['cFont']="15px, san-serif";
                        data.push(obj);
                        
                        arr2.push(crack);
                        console.log(obj);
                        j++;
                    }
                    else{
                        obj['label']="Dangerous Cracks";
                        obj['color']="red",
                        obj['points']={"show":true};
                        obj['data']=[
                            [crack.clat,crack.clong]
                        ];
                        obj["points"]={radius:15,show: true };
                        obj['showLabels']=true;
                        obj["labels"]=["C"+(k).toString()];
                        obj['labelPlacement']='below';
                        obj['canvasRender']=true;
                        obj['cColor']='red';
                        obj['cFont']="15px, san-serif";
                        data.push(obj);
                        arr3.push(crack);
                        k++;
                    }
                });
				  
                

				var options = {
				lines: { show: true, lineWidth:13 },
				points: { show: true ,radius: 10,fill:false},
				xaxis: { show: true,autoscaleMargin: 0.04 },
				yaxis: { show: true ,autoscaleMargin: 0.02 },
				grid: { show:true,margin:10}  
				};


				$(document).ready(function(){
					$.plot($("#placeholder"), data,options);		  
				});

	  
			  }
		  }
		  xhttp.open('GET','/getcracks',true);
		  xhttp.send();
			
	  },2000);

      $('#presss').click(function(){
            var vali = $('#val').val();
            console.log(arr1,arr2,arr3);
            if(vali!=null && vali!= ""){
                var xhttp1 = new XMLHttpRequest();
                xhttp1.onreadystatechange = ()=>{
                    if(xhttp1.readyState==4 && xhttp1.status==200){
                        alert(vali + " this marked as maintained");
                    }
                };
                
                if(vali[0]=='A'){
                    var index = parseInt(vali[1]);
                    var o1  = arr1[index];
                    var clat  = o1.clat;
                    var clong = o1.clong;
                }
                if(vali[0]=='B'){
                    var index = parseInt(vali[1]);
                    var o1  = arr2[index];
                    var clat  = o1.clat;
                    var clong = o1.clong;
                }
                if(vali[0]=='C'){
                    var index = parseInt(vali[1]);
                    var o1  = arr3[index];
                    var clat  = o1.clat;
                    var clong = o1.clong;
                }
                var url  = "/check/?clat="+clat+'&clong='+clong;
                xhttp1.open('GET',url,true);
                xhttp1.send();
            }
      });
	  
  </script>
</body>
</html>